#include <iostream>
#include<windows.h>
#include<stdio.h>
#include<GL/glut.h>
#include<math.h>
#define pi 3.142857
#include<iostream>
using namespace std;
void drawline(double x_1,double y_1,double x_2,double y_2){
         double x1=x_1; ///x1,y1 Start x2,y2 end
         double x2=x_2;
         double y1=y_1;
         double y2=y_2;

         double dy=y2-y1;
         double dx=x2-x1;
         double d_init=2*dy-dx;
         double d_E=2*dy;
         double d_NE=2*(dy-dx);


         glPointSize(3);
         glBegin(GL_POINTS);
         glColor3f(0,1,0);
         glVertex2f( x1,y1 );
         glEnd();


         while(x1<=x2){
                  if(d_init<=0){
                  d_init=d_init+d_E;

                  }

                  else{
                  d_init=d_init+d_NE;
                  y1+=1;
                  }

                  x1+=1;


                  cout <<x1<<" "<<y1<<endl;
                  glVertex2f( x1,y1 );

         }

}


void myInit ()
{

	//glClearColor(0.0, 1.0, 0.0, 0.0);
	//glClearColor(184.0f/255.0f, 213.0f/255.0f, 238.0f/255.0f, 1.0f);
	//glColor3f(0.0, 0.2, 0.0);
	glClearColor(128.0f/255.0f,0, 0, 1.0f);

	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();


	// setting window dimension in X- and Y- direction
	glOrtho(0, 500, 0, 500, -10.0, 10.0);


}

void display ()
{



glClear(GL_COLOR_BUFFER_BIT);
drawline(5,8,9,11);
//Triangle
/*glBegin(GL_TRIANGLES);
glColor3f(0,0,0);
glVertex2f( 250,250 );
glVertex2f( 300, 200 );
glVertex2f( 200, 200);
glEnd(); */

/*
//lines
glBegin(GL_LINES);
glColor3f(0,1,0);
glVertex2f( 250,500 );
glVertex2f( 250, 0 );
glEnd();

//point

glPointSize(100);
glBegin(GL_POINTS);
glColor3f(0,1,0);
glVertex2f( 100,100 );
glEnd();

//Quads
glBegin(GL_QUADS);
glColor3ub(128,0,0);
glVertex2f( 0,0 );
glVertex2f( 200, 0 );
glVertex2f( 200, 200);
glVertex2f( 0, 200);
glEnd();

//polygon
glBegin(GL_POLYGON);
glColor3f(0,1,0);
glVertex2f( 100,100 );
glVertex2f( 100, 0 );
glVertex2f( 50, 0 );
glVertex2f( 10, 50 );
glVertex2f( 50, 200 );

glEnd();

*/

glFlush();
}

int main (int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);

	// giving window size in X- and Y- direction
	glutInitWindowSize(500, 500);
	glutInitWindowPosition(100, 0);

	// Giving name to window
	glutCreateWindow("bahubali 3");
	myInit();

	glutDisplayFunc(display);
	//glutTimerFunc(25, update, 0);

	glutMainLoop();
}
